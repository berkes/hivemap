<!DOCTYPE html>
<html lang="nl">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link rel="stylesheet" href="semantic/semantic.min.css" type="text/css" media="all" />
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <style>
      .map {
        height: 600px;
        width: 100%;
      }
    </style>

    <script src="https://code.jquery.com/jquery-3.1.1.min.js"
            integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
            crossorigin="anonymous"></script>
    <script src="semantic/semantic.min.js"></script>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js" type="text/javascript"></script>
  </head>
  <body>
    <div class="ui grid container">
      <div class="twelve wide column">
        <h1 class="ui header">
          <img class="ui image" src="http://via.placeholder.com/70x70">
          <div class="content">Bijenkasten
            <div class="sub header">Waar staan bijenkasten in regio Nijmegen</div>
          </div>
        </h1>
      </div>
      <div class="four wide column">
        <div class="ui compact menu">
          <div class="ui right simple dropdown item">
            Bewerken
            <i class="dropdown icon"></i>
            <div class="menu">
              <a class="item">Toevoegen</a>
              <a class="item">Contact</a>
            </div>
          </div>
        </div>
      </div>
      <div class="ten wide column">
        <div id="map" class="map"></div>
      </div>
      <div class="four wide column">
        <div class="ui divided items">
          <div class="ui item">
            <div class="content">
              <a class="header">Header</a>
              <div class="description">
                Lorem Ipsum
              </div>
            </div>
          </div>
          <div class="ui item">
            <div class="content">
              <a class="header">Header</a>
              <div class="description">
                Lorem Ipsum
              </div>
            </div>
          </div>
          <div class="ui item">
            <div class="content">
              <a class="header">Header</a>
              <div class="description">
                Lorem Ipsum
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script type="text/javascript">
      var highlightItemFor = function(feature) {
        console.log(feature);
        var thisItem = document.getElementById('item-' + feature.id);
        if (thisItem) {
          thisItem.addClass('highlighted');
        }
      };

      var _styleFunction = function(feature) {
        var size = feature.get('features').length;
        return new ol.style.Style({
          image: new ol.style.RegularShape({
            radius: 16,
            points: 6,
            stroke: new ol.style.Stroke({ color: '#fff' }),
            fill: new ol.style.Fill({ color: '#3399CC' })
          }),
          text: new ol.style.Text({
            text: size.toString(),
            fill: new ol.style.Fill({ color: '#fff' })
          })
        });
      };

      var handleClickAt = function(pixel) {
        // TODO: fix grouped features.
        var feature = map.forEachFeatureAtPixel(pixel, function(feature) {
          return feature;
        });
        if (feature) { // A feature was clicked.
          highlightItemFor(feature);
        } else {
          // TODO: show popup with ADD new.
        }
      };
      var raster = new ol.layer.Tile({ source: new ol.source.OSM() });

      vector = new ol.layer.Vector({
        source: new ol.source.Cluster({
          distance: 40,
          source: new ol.source.Vector({
            url: '/proposed_nodes.kml',
            format: new ol.format.KML({ extractStyles: false })
          })
        }),
        style: _styleFunction
      })

      var map = new ol.Map({
        target: 'map',
        layers: [raster, vector],
        view: new ol.View({
          center: ol.proj.fromLonLat([5.859690,51.841832]),
          zoom: 12
        })
      });

      var extent = map.getView().calculateExtent(map.getSize());
      console.log(extent);
      vector.getSource().getSource().forEachFeatureInExtent(extent, function(feature) {
        console.log(feature.get('description'));
      });

      map.on('click', function(evt) {
        handleClickAt(evt.pixel);
      });
    </script>
  </body>
</html>
